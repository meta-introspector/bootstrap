//! # Emoji Stage Display
//!
//! This module implements the `Display` trait for the `EmojiStage` enum.
//! It maps each stage variant to its corresponding emoji character, allowing
//! the stages to be printed as their symbolic representations.

use std::fmt;
use super::emoji_stage_enum::EmojiStage;

impl fmt::Display for EmojiStage {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        let emoji = match self {
            EmojiStage::Unity => "1Ô∏è‚É£",
            EmojiStage::Prime => "2Ô∏è‚É£",
            EmojiStage::Triangle => "3Ô∏è‚É£",
            EmojiStage::Square => "4Ô∏è‚É£",
            EmojiStage::Pentagon => "5Ô∏è‚É£",
            EmojiStage::Hexagon => "6Ô∏è‚É£",
            EmojiStage::Lucky => "7Ô∏è‚É£",
            EmojiStage::Cube => "8Ô∏è‚É£",
            EmojiStage::Magic => "9Ô∏è‚É£",
            EmojiStage::Decimal => "üîü",
            EmojiStage::Physical => "üîå",
            EmojiStage::DataLink => "üîó",
            EmojiStage::Network => "üåê",
            EmojiStage::Transport => "üì¶",
            EmojiStage::Session => "ü§ù",
            EmojiStage::Presentation => "üé®",
            EmojiStage::Application => "üíª",
            EmojiStage::Rocket => "üöÄ",
            EmojiStage::Crab => "ü¶Ä",
            EmojiStage::Dna => "üß¨",
            EmojiStage::Coin => "ü™ô",
            EmojiStage::Brain => "üß†",
            EmojiStage::Heart => "‚ù§Ô∏è",
            EmojiStage::Star => "‚≠ê",
            EmojiStage::Fire => "üî•",
            EmojiStage::Lightning => "‚ö°",
            EmojiStage::Shield => "üõ°Ô∏è",
            EmojiStage::Unknown(s) => s.as_str(),
            _ => "‚ùì",
        };
        write!(f, "{}", emoji)
    }
}